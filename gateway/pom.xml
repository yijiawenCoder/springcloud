<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.chinasoft</groupId>
    <artifactId>gateway</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>
        <servlet.version>4.0.1</servlet.version>
        <spring-boot.version>2.6.6</spring-boot.version>
        <spring-cloud.version>2021.0.1</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <commons-lang.version>2.6</commons-lang.version>
        <spring-boot-admin.version>2.6.2</spring-boot-admin.version>
        <hutool.version>5.7.19</hutool.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <velocity.version>1.7</velocity.version>
        <jasypt.version>2.1.0</jasypt.version>
        <swagger.fox.version>3.0.0</swagger.fox.version>
        <shiro.version>1.7.1</shiro.version>
        <jedis.version>2.9.0</jedis.version>
        <mysql.version>8.0.13</mysql.version>
        <gson.version>2.8.5</gson.version>
        <hibernate-validator.version>6.0.7.Final</hibernate-validator.version>
        <sentinel.version>1.8.3</sentinel.version>
        <druid.version>1.1.10</druid.version>
        <swagger-spring.version>1.9.1.RELEASE</swagger-spring.version>
        <logback.version>1.2.3</logback.version>
        <swagger.fox.version>3.0.0</swagger.fox.version>
        <nacos-client.version>1.3.2</nacos-client.version>
        <jjwt.version>0.9.0</jjwt.version>
        <auth0.version>3.3.0</auth0.version>
        <docker.plugin.version>0.32.0</docker.plugin.version>
        <docker.host>http://192.168.0.100:2375</docker.host>
        <docker.registry>192.168.0.100</docker.registry>
        <docker.namespace>gomoneycloud</docker.namespace>
        <docker.username>username</docker.username>
        <docker.password>password</docker.password>
        <git.commit.plugin>4.9.9</git.commit.plugin>
        <spring.checkstyle.plugin>0.0.29</spring.checkstyle.plugin>
    </properties>

    <dependencies>
        <!--        <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>2.3.0</version>
                </dependency>-->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${auth0.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <!--监控客户端-->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>
        <!--        <dependency>
                    <groupId>io.springfox</groupId>
                    <artifactId>springfox-swagger-ui</artifactId>
                    <version>${swagger.fox.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.springfox</groupId>
                    <artifactId>springfox-swagger2</artifactId>
                    <version>${swagger.fox.version}</version>
                </dependency>-->

        <!--        <dependency>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-annotations</artifactId>
                    <version>${swagger.fox.version}</version>
                </dependency>-->
        <!--        <dependency>
                    <groupId>com.spring4all</groupId>
                    <artifactId>swagger-spring-boot-starter</artifactId>
                    <version>${swagger-spring.version}</version>
                </dependency>-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--配置中心客户端-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.nacos</groupId>
            <artifactId>nacos-client</artifactId>
        </dependency>
        <!--logback日志管理包-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-gateway-spring-boot-starter</artifactId>
            <version>4.4.0</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud alibaba-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!--    <build>-->
    <!--        <finalName>${project.name}</finalName>-->
    <!--        <pluginManagement>-->
    <!--            <plugins>-->
    <!--                <plugin>-->
    <!--                    <groupId>org.springframework.boot</groupId>-->
    <!--                    <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--                    <version>${spring-boot.version}</version>-->
    <!--                    <configuration>-->
    <!--                        <finalName>${project.build.finalName}</finalName>-->
    <!--                        <layers>-->
    <!--                            <enabled>true</enabled>-->
    <!--                        </layers>-->
    <!--                    </configuration>-->
    <!--                    <executions>-->
    <!--                        <execution>-->
    <!--                            <goals>-->
    <!--                                <goal>repackage</goal>-->
    <!--                            </goals>-->
    <!--                        </execution>-->
    <!--                    </executions>-->
    <!--                </plugin>-->
    <!--                <plugin>-->
    <!--                    <groupId>io.fabric8</groupId>-->
    <!--                    <artifactId>docker-maven-plugin</artifactId>-->
    <!--                    <version>${docker.plugin.version}</version>-->
    <!--                    <configuration>-->
    <!--                        &lt;!&ndash; Docker Remote Api&ndash;&gt;-->
    <!--                        <dockerHost>${docker.host}</dockerHost>-->
    <!--                        &lt;!&ndash; Docker 镜像私服&ndash;&gt;-->
    <!--                        <registry>${docker.registry}</registry>-->
    <!--                        &lt;!&ndash; 认证信息&ndash;&gt;-->
    <!--                        <authConfig>-->
    <!--                            <push>-->
    <!--                                <username>${docker.username}</username>-->
    <!--                                <password>${docker.password}</password>-->
    <!--                            </push>-->
    <!--                        </authConfig>-->
    <!--                        <images>-->
    <!--                            <image>-->
    <!--                                &lt;!&ndash; 镜像名称： 172.17.0.111/library/pig-gateway:2.6.3&ndash;&gt;-->
    <!--                                <name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>-->
    <!--                                <build>-->
    <!--                                    <dockerFile>${project.basedir}/Dockerfile</dockerFile>-->
    <!--                                </build>-->
    <!--                            </image>-->
    <!--                        </images>-->
    <!--                    </configuration>-->
    <!--                </plugin>-->
    <!--            </plugins>-->
    <!--        </pluginManagement>-->
    <!--        <plugins>-->
    <!--            &lt;!&ndash;打包jar 与git commit 关联插件&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>io.github.git-commit-id</groupId>-->
    <!--                <artifactId>git-commit-id-maven-plugin</artifactId>-->
    <!--                <version>${git.commit.plugin}</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>get-the-git-infos</id>-->
    <!--                        <goals>-->
    <!--                            <goal>revision</goal>-->
    <!--                        </goals>-->
    <!--                        <phase>initialize</phase>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <failOnNoGitDirectory>false</failOnNoGitDirectory>-->
    <!--                    <generateGitPropertiesFile>true</generateGitPropertiesFile>-->
    <!--                    &lt;!&ndash;因为项目定制了jackson的日期时间序列化/反序列化格式，因此这里要进行配置,不然通过management.info.git.mode=full进行完整git信息监控时会存在问题&ndash;&gt;-->
    <!--                    <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>-->
    <!--                    <includeOnlyProperties>-->
    <!--                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>-->
    <!--                        <includeOnlyProperty>^git.commit.(id|message|time).*$</includeOnlyProperty>-->
    <!--                    </includeOnlyProperties>-->
    <!--                </configuration>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash;代码格式插件，默认使用spring 规则&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>io.spring.javaformat</groupId>-->
    <!--                <artifactId>spring-javaformat-maven-plugin</artifactId>-->
    <!--                <version>${spring.checkstyle.plugin}</version>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <!-- 环境标识，需要与配置文件的名称相对应 -->
                <profiles.active>dev</profiles.active>
            </properties>
            <activation>
                <!-- 默认环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>
</project>